Determining if the Q_WS_X11 exist failed with the following output:
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
/usr/bin/cmake -E cmake_progress_report /Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o
/usr/bin/gcc  -F/Library/Frameworks   -o CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o   -c /Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: error: ‘Q_WS_X11’ undeclared (first use in this function)
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: error: (Each undeclared identifier is reported only once
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: error: for each function it appears in.)
make[1]: *** [CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o] Error 1
make: *** [cmTryCompileExec/fast] Error 2

File /Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <QtCore/qglobal.h>

void cmakeRequireSymbol(int dummy,...){(void)dummy;}
int main()
{
#ifndef Q_WS_X11
  cmakeRequireSymbol(0,&Q_WS_X11);
#endif
  return 0;
}

Determining if the Q_WS_WIN exist failed with the following output:
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
/usr/bin/cmake -E cmake_progress_report /Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o
/usr/bin/gcc  -F/Library/Frameworks   -o CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o   -c /Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: error: ‘Q_WS_WIN’ undeclared (first use in this function)
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: error: (Each undeclared identifier is reported only once
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: error: for each function it appears in.)
make[1]: *** [CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o] Error 1
make: *** [cmTryCompileExec/fast] Error 2

File /Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <QtCore/qglobal.h>

void cmakeRequireSymbol(int dummy,...){(void)dummy;}
int main()
{
#ifndef Q_WS_WIN
  cmakeRequireSymbol(0,&Q_WS_WIN);
#endif
  return 0;
}

Determining if the Q_WS_QWS exist failed with the following output:
/usr/bin/make -f CMakeFiles/cmTryCompileExec.dir/build.make CMakeFiles/cmTryCompileExec.dir/build
/usr/bin/cmake -E cmake_progress_report /Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CMakeFiles 1
Building C object CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o
/usr/bin/gcc  -F/Library/Frameworks   -o CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o   -c /Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c: In function ‘main’:
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: error: ‘Q_WS_QWS’ undeclared (first use in this function)
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: error: (Each undeclared identifier is reported only once
/Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:8: error: for each function it appears in.)
make[1]: *** [CMakeFiles/cmTryCompileExec.dir/CheckSymbolExists.o] Error 1
make: *** [cmTryCompileExec/fast] Error 2

File /Users/bhattgopal/dev/cpp/qgis0.9/build/CMakeFiles/CMakeTmp/CheckSymbolExists.c:
/* */
#include <QtCore/qglobal.h>

void cmakeRequireSymbol(int dummy,...){(void)dummy;}
int main()
{
#ifndef Q_WS_QWS
  cmakeRequireSymbol(0,&Q_WS_QWS);
#endif
  return 0;
}

